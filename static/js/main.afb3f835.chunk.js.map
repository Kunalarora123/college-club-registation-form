{"version":3,"sources":["validate.js","FieldArraysForm.js","Table.js","App.js","index.js"],"names":["validate","values","errors","members","length","membersArrayErrors","forEach","member","memberIndex","memberErrors","enterLabel","enterValue","_error","renderField","input","label","type","meta","touched","error","placeholder","renderMembers","fields","submitFailed","onClick","push","map","index","title","remove","Field","name","component","reduxForm","form","props","handleSubmit","pristine","reset","submitting","onSubmit","console","log","FieldArray","disabled","useStyles","makeStyles","table","minWidth","connect","state","getFormValues","classes","TableContainer","Paper","Table","className","aria-label","TableHead","TableRow","TableCell","TableBody","m","i","App","rootReducer","combineReducers","formReducer","store","createStore","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.afb3f835.chunk.js","sourcesContent":["const validate = values => {\r\n    const errors = {}\r\n    if (!values.members || !values.members.length) {\r\n      errors.members = { _error: 'At least one Label and Value must be entered' }\r\n    } else {\r\n      const membersArrayErrors = []\r\n      values.members.forEach((member, memberIndex) => {\r\n        const memberErrors = {}\r\n        if (!member || !member.enterLabel) {\r\n          memberErrors.enterLabel = 'Required'\r\n          membersArrayErrors[memberIndex] = memberErrors\r\n        }\r\n        if (!member || !member.enterValue) {\r\n          memberErrors.enterValue = 'Required'\r\n          membersArrayErrors[memberIndex] = memberErrors\r\n        }\r\n      })\r\n      if (membersArrayErrors.length) {\r\n        errors.members = membersArrayErrors\r\n      }\r\n    }\r\n    return errors\r\n  }\r\n\r\n  export default validate\r\n\r\n\r\n","import React from \"react\";\r\nimport { Field, FieldArray, reduxForm } from \"redux-form\";\r\nimport validate from \"./validate\";\r\n\r\nconst renderField = ({ input, label, type, meta: { touched, error } }) => (\r\n  <div>\r\n    <label>{label}</label>\r\n    <div>\r\n      <input {...input} type={type} placeholder={label} />\r\n      {touched && error && <span>{error}</span>}\r\n    </div>\r\n  </div>\r\n);\r\n\r\nconst renderMembers = ({ fields, meta: { error, submitFailed } }) => (\r\n  <ul>\r\n    <li>\r\n      <button type=\"button\" onClick={() => fields.push({})}>\r\n        Add Entry\r\n      </button>\r\n    </li>\r\n    {submitFailed && error && <span>{error}</span>}\r\n    {fields.map((member, index) => (\r\n      <li key={index}>\r\n        <button\r\n          type=\"button\"\r\n          title=\"Remove Member\"\r\n          onClick={() => fields.remove(index)}\r\n        >\r\n          Remove Entry\r\n        </button>\r\n        <h4>#{index + 1} Entry</h4>\r\n        <Field\r\n          name={`${member}.enterLabel`}\r\n          type=\"text\"\r\n          component={renderField}\r\n          label=\"Enter Label\"\r\n        />\r\n        <Field\r\n          name={`${member}.enterValue`}\r\n          type=\"text\"\r\n          component={renderField}\r\n          label=\"Enter value\"\r\n        />\r\n      </li>\r\n    ))}\r\n  </ul>\r\n);\r\n\r\nconst FieldArraysForm = (props) => {\r\n  const { handleSubmit, pristine, reset, submitting } = props;\r\n  const grabValues = (values) => {\r\n    console.log(values);\r\n  };\r\n  return (\r\n    <div>\r\n      <h1>College Club Registration Form</h1>\r\n      <hr />\r\n      <form onSubmit={handleSubmit(grabValues)}>\r\n        <FieldArray name=\"members\" component={renderMembers} />\r\n        <div>\r\n          <button type=\"submit\" disabled={submitting}>\r\n            Submit\r\n          </button>\r\n          <button\r\n            type=\"button\"\r\n            disabled={pristine || submitting}\r\n            onClick={reset}\r\n          >\r\n            Clear Values\r\n          </button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default reduxForm({\r\n  form: \"fieldArrays\",\r\n  validate,\r\n})(FieldArraysForm);\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport {connect} from 'react-redux'\r\nimport {getFormValues} from 'redux-form'\r\n\r\nconst useStyles = makeStyles({\r\n  table: {\r\n    minWidth: 650,\r\n  },\r\n});\r\n\r\nfunction BasicTable( {values = {members:[]}} ) {\r\n  const classes = useStyles();\r\n  return (\r\n    <TableContainer component={Paper}>\r\n      <Table className={classes.table} aria-label=\"simple table\">\r\n        <TableHead>\r\n          <TableRow>\r\n            <TableCell >Label</TableCell>\r\n            <TableCell >Value</TableCell>\r\n            \r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          {values.members.map((m,i) => (\r\n           <TableRow key={`${i}-${m.enterLabel}-${m.enterValue}`}>\r\n              <TableCell >{m.enterLabel}</TableCell>\r\n              <TableCell >{m.enterValue}</TableCell>\r\n            </TableRow>\r\n          ))}\r\n        </TableBody>\r\n      </Table>\r\n    </TableContainer>\r\n  );\r\n}\r\n\r\nexport default connect(state => ({\r\n    values:getFormValues(\"fieldArrays\")(state),\r\n}))(BasicTable)","import React from \"react\";\nimport FieldArraysForm from \"./FieldArraysForm\";\nimport Table from \"./Table\";\nfunction App() {\n  return (\n    <div className=\"App\">\n      <FieldArraysForm />\n      <Table />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { Provider } from 'react-redux';\nimport { createStore, combineReducers } from 'redux'\nimport { reducer as formReducer } from 'redux-form'\n\nconst rootReducer = combineReducers({\n  form: formReducer\n})\n\nconst store = createStore(rootReducer)\n\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n   </Provider> \n  ,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}